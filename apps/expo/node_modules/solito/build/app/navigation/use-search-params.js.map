{"version":3,"file":"use-search-params.js","sourceRoot":"","sources":["../../../src/app/navigation/use-search-params.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,cAAc,CAAA;AACvC,OAAO,EAAE,QAAQ,EAAE,MAAM,wBAAwB,CAAA;AACjD,OAAO,mBAAmB,MAAM,0BAA0B,CAAA;AAE1D,OAAO,EAAE,OAAO,EAAE,MAAM,OAAO,CAAA;AAE/B,MAAM,UAAU,eAAe;IAQ7B,IAAI,QAAQ,CAAC,EAAE,KAAK,KAAK,EAAE;QACzB,OAAO,mBAAmB,EAAa,CAAA;KACxC;IAED,MAAM,KAAK,GAAG,QAAQ,EAAE,CAAA;IAExB,IAAI,CAAC,KAAK,EAAE;QACV,OAAO,CAAC,KAAK,CACX,2CAA2C,QAAQ,CAAC,EAAE,gDAAgD,CACvG,CAAA;KACF;IAED,MAAM,MAAM,GAAG,KAAK,EAAE,MAA0B,CAAA;IAEhD,IAAI,OAAO,EAAE;QACX,MAAM,oBAAoB,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,IAAI,EAAE,CAAC;aACtD,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,EAAE;YACpB,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;gBAC7B,OAAO,GAAG,GAAG,KAAK,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,CAAA;aAC1C;YACD,OAAO,SAAS,CAAA;QAClB,CAAC,CAAC;aACD,MAAM,CAAC,OAAO,CAAC,CAAA;QAElB,IAAI,oBAAoB,CAAC,MAAM,EAAE;YAC/B,MAAM,IAAI,KAAK,CAAC,iDACd,KAAK,EAAE,IAAI,IAAI,SACjB,kBACE,KAAK,EAAE,IAAI,IAAI,SACjB;;EAEJ,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC;;;CAGhC,CAAC,CAAA;SACG;KACF;IAED,OAAO,OAAO,CAAC,GAAG,EAAE,CAAC,MAAM,IAAI,IAAI,eAAe,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAA;AACvE,CAAC","sourcesContent":["import { Platform } from 'react-native'\nimport { useRoute } from '../../params/use-route'\nimport useNextSearchParams from './use-next-search-params'\nimport { ReadonlyURLSearchParams } from 'next/navigation'\nimport { useMemo } from 'react'\n\nexport function useSearchParams<Type extends Record<string, string>>() {\n  type Returns =\n    | (ReadonlyURLSearchParams & {\n        get: (key: keyof Type) => string | null\n        getAll: (key: keyof Type) => string[]\n        has: (key: keyof Type) => boolean\n      })\n    | undefined\n  if (Platform.OS === 'web') {\n    return useNextSearchParams() as Returns\n  }\n\n  const route = useRoute()\n\n  if (!route) {\n    console.error(\n      `[useParams] route is undefined. Is your ${Platform.OS} app properly configured for React Navigation?`\n    )\n  }\n\n  const params = route?.params as Type | undefined\n\n  if (__DEV__) {\n    const nonStringParamValues = Object.entries(params || {})\n      .map(([key, value]) => {\n        if (typeof value !== 'string') {\n          return `${key}: ${JSON.stringify(value)}`\n        }\n        return undefined\n      })\n      .filter(Boolean)\n\n    if (nonStringParamValues.length) {\n      throw new Error(`[useSearchParams][solito] Error found in the \"${\n        route?.name ?? 'unknown'\n      }\" screen (path ${\n        route?.path ?? 'unknown'\n      }). You used non-string parameters for the following params:\n      \n${nonStringParamValues.join('\\n')}\n\nDue to constraints from Next.js, this is not valid in Solito.  Please refactor your code to use strings for screen parameters.\n`)\n    }\n  }\n\n  return useMemo(() => params && new URLSearchParams(params), [params])\n}\n"]}